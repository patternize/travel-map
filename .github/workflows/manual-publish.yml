name: Manual Publish to npm

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g. patch, minor, major, or specific version)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease
          - custom
      customVersion:
        description: 'Custom version (only used if version is set to "custom")'
        required: false
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          scope: '@patternize'

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Install dependencies
        run: npm ci

      - name: Set version
        id: set-version
        run: |
          if [ "${{ github.event.inputs.version }}" = "custom" ]; then
            if [ -z "${{ github.event.inputs.customVersion }}" ]; then
              echo "Custom version was selected but no version was provided"
              exit 1
            fi
            npm version ${{ github.event.inputs.customVersion }} --no-git-tag-version
          else
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
          fi
          echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Build
        run: npm run build

      - name: Publish to npm
        run: |
          npm publish || {
            if grep -q "You cannot publish over the previously published versions" <<< "$(cat /home/runner/.npm/_logs/*-debug-0.log)"; then
              echo "Version already exists on npm - treating as success"
              exit 0
            else
              exit 1
            fi
          }
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git Tag
        run: |
          git tag v${{ steps.set-version.outputs.NEW_VERSION }}
          git push origin v${{ steps.set-version.outputs.NEW_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
